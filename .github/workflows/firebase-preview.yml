name: Firebase Preview Deploy

on:
  pull_request:
    branches:
      - main

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: 📂 Install dependencies
        run: npm ci

      - name: 🔨 Build the app
        run: npm run build

      - name: 🧪 Test the app with Vitest
        run: npm run test:ci | tee test-results.txt

      # 🚮 Clean up test results for comment
      - name: 🚮 Clean up test results
        run: sed -i 's/\x1b\[[0-9;]*m//g' test-results.txt # Removes ANSI color codes

      # 📄 Format test results for better readability
      - name: 📄 Format test results
        run: |
          {
            echo "### 🧪 Test Results"
            echo ""
            if grep -q "failed" test-results.txt; then
              # Extract failed test details if any
              echo "❌ **Some tests failed**:"
              echo '```'
              grep -E "Test Files|Tests|Duration|failed" test-results.txt
              echo '```'
              echo ""
              echo "💥 Please review the failed tests above."
            else
              # Format output for passing tests
              grep -E "(Test Files|Tests|Duration)" test-results.txt | while read -r line; do
                if [[ $line == *"Test Files"* ]]; then
                  echo "🗂 **Test Summary**: $line"
                elif [[ $line == *"Tests"* ]]; then
                  echo "✅ **Tests Passed**: $line"
                elif [[ $line == *"Duration"* ]]; then
                  echo "⏱️ **Total Duration**: $line"
                fi
              done
              echo ""
              echo "🎉 All tests passed successfully!"
            fi
          } > formatted-results.txt

      - name: 🚀 Install Firebase CLI
        run: npm install -g firebase-tools

      - name: 🌐 Deploy to Firebase Preview Channel
        id: firebase_deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase hosting:channel:deploy pr-${{ github.event.number }} --expires 2d | tee deploy-output.txt

      - name: 🔗 Extract Preview URL
        id: extract_url
        run: |
          URL=$(grep -oP 'https:\/\/[^\s]+pr-${{ github.event.number }}[^\s]+' deploy-output.txt)
          echo "PREVIEW_URL=${URL}" >> $GITHUB_ENV

      - name: 💬 Post test results and preview link to PR
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = process.env.PREVIEW_URL;
            const fs = require('fs');
            const testResults = fs.readFileSync('formatted-results.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 Preview for this PR is available at: ${previewUrl} \n\n ${testResults}`
            });
